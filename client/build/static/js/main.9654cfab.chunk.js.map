{"version":3,"sources":["views/PirateDashboard.js","components/Form.js","views/AddPirate.js","views/PirateDetails.js","views/EditPirate.js","App.js","serviceWorker.js","index.js"],"names":["PirateDashboard","props","React","useState","pirates","setPirates","useEffect","axios","get","then","result","console","log","data","deletePirate","pirateId","delete","res","filter","pirate","_id","removeFromDom","className","to","sort","map","idx","key","pirateName","src","image","alt","onClick","e","Form","onSubmitHandler","initialData","form","setForm","onSubmit","type","name","value","onChange","target","length","style","color","treasures","cols","rows","phrase","position","selected","checked","pegLeg","eyePatch","hookHand","AddPirate","preventDefault","post","response","navigate","catch","err","PirateDetails","id","setPirate","EditPirate","loaded","setLoaded","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9654cfab.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from '@reach/router'\nimport axios from \"axios\";\n\nconst PirateDashboard = props => {\n    const [pirates, setPirates] = React.useState([])\n\n    const removeFromDom = pirateId => {\n        setPirates(pirates.filter(pirate => pirate._id !== pirateId));\n    }\n\n    React.useEffect(() =>{\n        axios.get('http://localhost:8000/api/pirates')\n            .then(result => {\n                console.log(result);\n                setPirates(result.data);\n            });\n    }, [])\n\n    const deletePirate =(pirateId) => {\n        axios.delete(\"http://localhost:8000/api/pirates/\" + pirateId)\n        .then(res => {\n            console.log(res);\n            removeFromDom(pirateId)\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"dashboard-header\">\n                <h1>Pirate Crew</h1>\n                <Link to = \"/pirate/new\"><button className=\"add-btn\">Add Pirate</button></Link>\n            </div>\n            <div className=\"dashboard\">\n                {pirates.sort().map((pirate,idx)=> {\n                    return(\n                        <div className=\"pirate-item\" key={idx}>\n                            <h4>{pirate.pirateName}</h4>\n                            <img className=\"dashboard-img\" src={`${pirate.image}`} alt=\"pirate\"/>\n                            <Link to={`/pirate/${pirate._id}`}><button className=\"view-btn\">View Pirate</button></Link>\n                            <Link to={`/pirate/${pirate._id}/edit`}><button className=\"edit-btn\">Edit Pirate</button></Link>\n                            <button onClick = {(e) => {deletePirate(pirate._id)}} className=\"delete-btn\">Walk the plank</button>\n                        </div>\n                    )\n                })}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default PirateDashboard\n","import React from 'react'\n\nconst Form = props => {\n    const { onSubmitHandler , initialData } = props;\n    const [form, setForm] = React.useState(initialData);\n\n    return (\n        <form onSubmit={e => { onSubmitHandler (e, form ) }} className=\"pirate-form\">\n            <div className=\"form-section-left\">\n                <div className=\"form-group\">\n                    <label>Pirate Name:</label>\n                    <input type=\"text\" name=\"pirateName\" value={form.pirateName} onChange = {(e) => setForm({...form,[e.target.name]: e.target.value})}/>\n                    {form.pirateName.length < 1 && (\n                        <span style={{color:\"red\"}}>Name is required!</span>\n                    )}\n                </div>\n                <div className=\"form-group\">\n                    <label>Image Url:</label>\n                    <input type=\"text\" name=\"image\" value={form.image} onChange = {(e) => setForm({...form,[e.target.name]: e.target.value})}/>\n                    {form.image.length < 1 && (\n                        <span style={{color:\"red\"}}>Image Url is required!</span>\n                    )}\n                </div>\n                <div className=\"form-group\">\n                    <label># of Treasure Chests:</label>\n                    <select name=\"treasures\" value={form.treasures} onChange = {(e) => setForm({...form,[e.target.name]: e.target.value})}>\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                    {form.treasures < 1 && (\n                        <span style={{color:\"red\"}}>A value greater than 0 is required!</span>\n                    )}\n                </div>\n                <div className=\"form-group\">\n                    <label>Pirate Catch Phrase:</label>\n                    <textarea name=\"phrase\" cols=\"30\" rows=\"3\" value={form.phrase} onChange = {(e) => setForm({...form,[e.target.name]: e.target.value})}></textarea>\n                    {form.phrase.length < 1 && (\n                        <span style={{color:\"red\"}}>Phrase is required!</span>\n                    )}\n                </div>\n            </div>\n            <div className=\"form-section-right\">\n                <div className=\"form-group\">\n                    <label>Crew Position:</label>\n                    <select name=\"position\" value={form.position} onChange = {(e) => setForm({...form,[e.target.name] : e.target.value})}>\n                        <option value=\"Captain\">Captain</option>\n                        <option value=\"First Mate\">First Mate</option>\n                        <option value=\"Quarter Master\">Quarter Master</option>\n                        <option value=\"Boatswain\">Boatswain</option>\n                        <option value=\"Powder Monkey\" selected>Powder Monkey</option>\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"pegLeg\" checked={form.pegLeg} onChange = {(e) => setForm({...form,[e.target.name]: e.target.checked})}/> Peg Leg</p>\n                    <p><input type=\"checkbox\" name=\"eyePatch\" checked={form.eyePatch} onChange = {(e) => setForm({...form,[e.target.name]: e.target.checked})} /> Eye Patch</p>\n                    <p><input type=\"checkbox\" name=\"hookHand\" checked={form.hookHand} onChange = {(e) => setForm({...form,[e.target.name]: e.target.checked})} /> Hook Hand</p>\n                </div>\n                <button type=\"submit\" className=\"newPirate-btn\">Submit</button>\n            </div>\n        </form>     \n    )\n}\n\nexport default Form\n","import React from 'react'\nimport { Link, navigate} from \"@reach/router\"\nimport axios from \"axios\";\nimport Form from '../components/Form';\n\nconst AddPirate = props => {\n    const initialData = {\n        pirateName: \"\",\n        image: \"\",\n        phrase: \"\",\n        treasures: 0,\n        position: \"Captain\",\n        pegLeg: true,\n        eyePatch: true,\n        hookHand: true\n    }\n    const onSubmitHandler = (e, data) => {\n        console.log(data)\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/api/pirates\", data )\n    \n            .then(response => {\n                console.log(response);\n                navigate(\"/\");\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <div>\n            <div className=\"create-header\">\n                <h1>Add a New Pirate</h1>\n                <Link to =\"/\"><button className=\"crew-btn\">Pirate Crew</button></Link>\n            </div>\n            <Form onSubmitHandler = {onSubmitHandler} initialData = {initialData} />\n            \n        </div>\n    )\n}\n\nexport default AddPirate\n","import React from 'react'\nimport axios from 'axios'\n\nconst PirateDetails = ({id}) => {\n    const [pirate, setPirate] = React.useState({})\n\n    React.useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pirates/\" + id)\n            .then(result => \n                setPirate({\n                    ...result.data\n                    \n                }))\n    }, [])\n    return (\n        <div>\n            <h1 className=\"details-header\">Learn About {pirate.pirateName}</h1>\n            <div className=\"details-main\">\n                <div className=\"details-photo\">\n                    <img className=\"details-img\" src={`${pirate.image}`} alt=\"pirate\"/>\n                    <h1 className=\"pirate-quote\">\"{pirate.phrase}\"</h1>\n                </div>\n                <div className=\"about-section\">\n                    <h3>About</h3>\n                    <p>Position: <span>{pirate.position}</span></p>\n                    <p>Treasures: <span>{pirate.treasures}</span></p>\n                    <p>Peg Leg: {\n                        pirate.pegLeg? <span>Yes <span><button className=\"off-btn\">Toggle Off</button></span></span>: <span>No <span><button className=\"on-btn\" >Toggle On</button></span></span>\n                    }\n                    </p>\n                    <p>Eye Patch: {\n                    pirate.eyePatch? <span>Yes <span><button className=\"off-btn\">Toggle Off</button></span></span>: <span>No <span><button className=\"on-btn\">Toggle On</button></span></span>\n                    }\n                    </p>\n                    <p>Hook Hand: {\n                    pirate.hookHand? <span>Yes <span><button className=\"off-btn\">Toggle Off</button></span></span>: <span>No <span><button className=\"on-btn\">Toggle On</button></span></span>\n                    }\n                    </p>\n                </div>\n            </div>\n \n        </div>\n    )\n}\n\nexport default PirateDetails\n","import React from \"react\";\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\nimport Form from \"../components/Form\";\n\nconst EditPirate = ({ id }) => {\n  const [pirate, setPirate] = React.useState({});\n  const [loaded, setLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n      axios.get(\"http://localhost:8000/api/pirates/\" + id)\n        .then(result => {\n            console.log(result);\n            setPirate(result.data);\n            setLoaded(true);\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }, []);\n\n  const onSubmitHandler = (e, data) => {\n      console.log(data);\n      e.preventDefault();\n      axios.put(\"http://localhost:8000/api/pirates/\" + id, data)\n        .then(response => {\n            console.log(response);\n            navigate(\"/\");\n        })\n        .catch(err => {\n            console.log(err);\n      });\n  };\n  return (\n    <div>\n      <h1 className=\"edit-header\">Edit {pirate.pirateName}</h1>\n      {loaded && <Form onSubmitHandler = {onSubmitHandler} initialData = {pirate} />}\n    </div>\n  );\n};\n\nexport default EditPirate;\n","import React from 'react';\nimport './App.css';\nimport { Router } from '@reach/router'\nimport PirateDashboard from './views/PirateDashboard';\nimport AddPirate from './views/AddPirate';\nimport PirateDetails from './views/PirateDetails';\nimport EditPirate from './views/EditPirate';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <PirateDashboard path=\"/\" />\n        <AddPirate path = \"/pirate/new\" />\n        <PirateDetails path =\"/pirate/:id\"/>\n        <EditPirate path= \"/pirate/:id/edit\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}